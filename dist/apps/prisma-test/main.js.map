{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/prisma-test/src/apollo/context.ts","webpack:///./apps/prisma-test/src/apollo/schema.ts","webpack:///./apps/prisma-test/src/main.ts","webpack:///external \"@prisma/client\"","webpack:///external \"apollo-server-express\"","webpack:///external \"express\"","webpack:///external \"graphql-scalars\"","webpack:///external \"graphql-tools\"","webpack:///external \"tslib\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { PrismaClient } from '@prisma/client'\n\nexport interface Context {\n    prisma: PrismaClient\n}\n\nconst prisma = new PrismaClient()\n\nexport const context: Context = {\n    prisma: prisma\n}","import { makeExecutableSchema  } from \"graphql-tools\";\nimport { DateTimeResolver } from \"graphql-scalars\";\nimport { Context } from './context'\n\n\nconst typeDefs = `\ntype Mutation {\n  createDraft(authorEmail: String!, data: PostCreateInput!): Post\n  deletePost(id: Int!): Post\n  incrementPostViewCount(id: Int!): Post\n  signupUser(data: UserCreateInput!): User!\n  togglePublishPost(id: Int!): Post\n}\n\ntype Post {\n  author: User\n  content: String\n  createdAt: DateTime!\n  id: Int!\n  published: Boolean!\n  title: String!\n  updatedAt: DateTime!\n  viewCount: Int!\n}\n\ninput PostCreateInput {\n  content: String\n  title: String!\n}\n\ninput PostOrderByUpdatedAtInput {\n  updatedAt: SortOrder!\n}\n\ntype Query {\n  allUsers: [User!]!\n  draftsByUser(userUniqueInput: UserUniqueInput!): [Post]\n  feed(orderBy: PostOrderByUpdatedAtInput, searchString: String, skip: Int, take: Int): [Post!]!\n  postById(id: Int): Post\n}\n\nenum SortOrder {\n  asc\n  desc\n}\n\ntype User {\n  email: String!\n  id: Int!\n  name: String\n  posts: [Post!]!\n}\n\ninput UserCreateInput {\n  email: String!\n  name: String\n  posts: [PostCreateInput!]\n}\n\ninput UserUniqueInput {\n  email: String\n  id: Int\n}\n\nscalar DateTime\n`\n\n\nconst resolvers = {\n    Query: {\n      allUsers: (_parent, _args, context: Context) => {\n        return context.prisma.user.findMany()\n      },\n      postById: (_parent, args: { id: number }, context: Context) => {\n        return context.prisma.post.findUnique({\n          where: { id: args.id || undefined }\n        })\n      },\n      feed: (_parent, args: {\n        searchString: string,\n        skip: number,\n        take: number,\n        orderBy: PostOrderByUpdatedAtInput,\n      }, context: Context) => {\n        const or = args.searchString ? {\n          OR: [\n            { title: { contains: args.searchString } },\n            { content: { contains: args.searchString } }\n          ]\n        } : {}\n  \n        return context.prisma.post.findMany({\n          where: {\n            published: true,\n            ...or\n          },\n          take: args?.take,\n          skip: args?.skip,\n          orderBy: args?.orderBy\n        })\n      },\n      draftsByUser: (_parent, args: { userUniqueInput: UserUniqueInput }, context: Context) => {\n        return context.prisma.user.findUnique({\n          where: {\n            id: args.userUniqueInput.id || undefined,\n            email: args.userUniqueInput.email || undefined,\n          },\n        }).posts({\n          where: {\n            published: false\n          },\n        })\n      }\n    },\n    Mutation: {\n      signupUser: (_parent, args: { data: UserCreateInput }, context: Context) => {\n        const postData = args.data.posts?.map(post => {\n          return { title: post.title, content: post.content || undefined }\n        })\n  \n        return context.prisma.user.create({\n          data: {\n            name: args.data.name,\n            email: args.data.email,\n            posts: {\n              create: postData\n            }\n          },\n        })\n      },\n      createDraft: (_parent, args: { data: PostCreateInput, authorEmail: string }, context: Context) => {\n        return context.prisma.post.create({\n          data: {\n            title: args.data.title,\n            content: args.data.content,\n            author: {\n              connect: { email: args.authorEmail },\n            },\n          },\n        })\n      },\n      togglePublishPost: async (_parent, args: { id: number }, context: Context) => {\n        try {\n          const post = await context.prisma.post.findUnique({\n            where: { id: args.id || undefined },\n            select: {\n              published: true\n            }\n          })\n  \n          return context.prisma.post.update({\n            where: { id: args.id || undefined },\n            data: { published: !post?.published },\n          })\n        } catch (error) {\n          throw new Error(\n            `Post with ID ${args.id} does not exist in the database.`,\n          )\n        }\n      },\n      incrementPostViewCount: (_parent, args: { id: number }, context: Context) => {\n        return context.prisma.post.update({\n          where: { id: args.id || undefined },\n          data: {\n            viewCount: {\n              increment: 1\n            }\n          },\n        })\n      },\n      deletePost: (_parent, args: { id: number }, context: Context) => {\n        return context.prisma.post.delete({\n          where: { id: args.id },\n        })\n      }\n    },\n    DateTime: DateTimeResolver,\n    Post: {\n      author: (parent, _args, context: Context) => {\n        return context.prisma.post.findUnique({\n          where: { id: parent?.id }\n        }).author()\n      }\n    },\n    User: {\n      posts: (parent, _args, context: Context) => {\n        return context.prisma.user.findUnique({\n          where: { id: parent?.id }\n        }).posts()\n      }\n    }\n  }\n  \n  enum SortOrder {\n    asc = \"asc\",\n    desc = \"desc\"\n  }\n  \n  interface PostOrderByUpdatedAtInput {\n    updatedAt: SortOrder\n  }\n  \n  interface UserUniqueInput {\n    id?: number,\n    email?: string\n  }\n  \n  interface PostCreateInput {\n    title: string,\n    content?: string,\n  }\n  \n  interface UserCreateInput {\n    email: string,\n    name?: string,\n    posts?: PostCreateInput[],\n  }\n  \n  export const schema = makeExecutableSchema({\n    resolvers,\n    typeDefs,\n  })\n  ","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport * as express from 'express';\nimport { ApolloServer } from 'apollo-server-express'\nimport { context } from './apollo/context'\nimport { schema } from './apollo/schema'\n\nasync function startApolloServer() {\n\n  const server = new ApolloServer({ schema, context: context});\n  await server.start();\n\n  const app = express();\n  server.applyMiddleware({ app });\n\n  app.listen({ port: 3000 }, () => console.log(`Server ready at http://localhost:3000${server.graphqlPath}`))\n}\n\nstartApolloServer()","module.exports = require(\"@prisma/client\");","module.exports = require(\"apollo-server-express\");","module.exports = require(\"express\");","module.exports = require(\"graphql-scalars\");","module.exports = require(\"graphql-tools\");","module.exports = require(\"tslib\");"],"sourceRoot":""}